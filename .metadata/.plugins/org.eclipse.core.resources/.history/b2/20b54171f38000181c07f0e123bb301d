package com.itheima.erp.dao.impl;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;
import org.springframework.stereotype.Repository;

import com.itheima.erp.dao.IDepDao;
import com.itheima.erp.entity.Dep;
 
@SuppressWarnings("unchecked")
@Repository("depDao")
public class DepDao extends HibernateDaoSupport  implements IDepDao {
	@Resource(name="sessionFactory")
	public void setSf(SessionFactory sessionFactory){
		super.setSessionFactory(sessionFactory);
	}
	/**
	 * 查询条件列表
	 */
	
	@Override
	public List<Dep> getList(Dep dep1,Dep dep2,Object param) {
		DetachedCriteria dc = getDetachedCriteria(dep1, dep2, param);
		return (List<Dep>) getHibernateTemplate().findByCriteria(dc);
	}

	@Override
	public Long getCount(Dep dep1,Dep dep2,Object param) {
		
		DetachedCriteria dc = getDetachedCriteria(dep1, dep2, param);
			dc.setProjection(Projections.rowCount());
			List<?> list = getHibernateTemplate().findByCriteria(dc);
			return (Long) list.get(0);
	
	}
	
	@Override
	public List<Dep> getListBypage(Dep dep1, Dep dep2, Object param,int firstResult, int maxResults) {
		DetachedCriteria dc = getDetachedCriteria(dep1, dep2, param);
		return (List<Dep>) getHibernateTemplate().findByCriteria(dc,firstResult,maxResults);
	
	}

	
	
	/**
	 * 构建查询方法
	 */
	private DetachedCriteria getDetachedCriteria(Dep dep1,Dep dep2,Object param) {
		//离线动态查询
		DetachedCriteria dc=DetachedCriteria.forClass(Dep.class);
		dc.addOrder(Order.asc("uuid"));
		if(dep1!=null){
			if(!StringUtils.isEmpty(dep1.getName())){
				dc.add(Restrictions.like("name", dep1.getName(),MatchMode.ANYWHERE));
			}
			if(!StringUtils.isEmpty(dep1.getTele())){
				dc.add(Restrictions.like("tele", dep1.getTele(),MatchMode.ANYWHERE));
			}
		}
		return dc;
	}

	@Override
	public void add(Dep dep) {
		getHibernateTemplate().save(dep);
	}
}
